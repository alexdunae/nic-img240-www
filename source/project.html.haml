---
title: Final Project
---
.grid
  .content
    %h1 DRAFT Final Project - Your Own Web App

    %br
    %br


    %p This project is meant to be a real-world project. The decisions you make in building it should reflect the decisions you'd make if you were doing this for hire, or for a company, or for your own product.


    %p That said, there are a few things you must include.  These are detailed below.

    %p Your mark for the project will be based on

    %ol
      %li how it actually works
      %li whether it has all the required elements (below),
      %li whether your code is clear, easy to read, and follows the Ruby style guidelines noted below

    %br
    %br

    %h2 Required Elements

    %br

    %h3 Managing Data

    %ul
      %li Add model validations – all fields that need validations should have them (use some other than just <code>:presence</code>).
      %li Use model scopes for common queries – you should have at least one.
      %li Have at least two join relationships.
      %li Have at least one of each of the following data types: <code>integer</code>, <code>boolean</code>, <code>date</code> (or <code>datetime</code>).
      %li Have at least one class that doesn’t inherit from ActiveRecord.

    %br
    %br

    %h3 Controllers and Routing

    %ul
      %li Make a nice homepage that sells (or nicely explains) why someone should use your app. Your homepage should draw in data from at least one model.
      %li Use <code>:except</code> or <code>:only</code> to limit your routes to the ones that are implemented.
      %li You should have at least one controller that isn't directly tied to a model.
      %li You should have at least one controller method that isn't directly tied to a model.
      %li Use the <code>flash</code> after modifying data. All messages should come from your <code>locale</code> file.
      %li All data coming from users should be filtered using <code>permit</code>/<code>require</code>.
      %li Use each of <code>before_action</code>, <code>private</code> and <code>helper_method</code> at least once.

    %br
    %br

    %h3 Views

    %ul
      %li Display <code>flash</code> messages.
      %li Use partials at least once.
      %li Have at least two links that execute via Javascript, but degrade gracefully to a full request.
      %li Use helpers for any view code that isn't extremely simple.
      %li Display flash messages.

    %br
    %br

    %h3 Front End

    %ul
      %li
        Add CSS and HTML to make your app look nice. You can go as far as you wish with this – the only requirement is that it doesn’t just look like a mess of unstyled HTML. Use any CSS frameworks you like. Some starting points:

        %ul
          %li= link_to 'Skeleton', 'http://getskeleton.com/'
          %li= link_to 'Groundwork', 'http://groundworkcss.github.io/'
          %li= link_to 'Bootstrap', 'http://getbootstrap.com/'
          %li= link_to 'Gumby', 'http://gumbyframework.com/'
          %li= link_to 'Materialize', 'http://materializecss.com/'
          %li= link_to 'Pure.css', 'http://purecss.io/'
          %li= link_to 'Chopstick', 'http://getchopstick.com/'

    %br
    %br

    %h3 General

    %ul
      %li Allow user sign ups and sign ins - signed in users should have access to personalized content.
      %li Have "lost password" and "reset password" functionality
      %li Allow some accounts to be administrators, and give them at least one ability that a regular user doesn’t have.
      %li Use at least one gem that doesn’t come with Rails.
      %li Have at least one background job.
      %li Integrate with at least one external API – somewhere you either push data, or pull data, or both.
      %li Make your app deploy successfully to Heroku. Document the steps required in your README file.

    %br
    %br

    %h2 Style Guidelines

    %ul
      %li Don’t use <code>return</code>, <code>true</code> or <code>false</code> unless you need to.
      %li Use modern Ruby syntax for hashes (e.g. <code>key: 'value'</code> instead of <code>:key => 'value'</code>) whenever possible.
      %li Indent your code with two spaces. Make sure your indenting is appropriate. Don't have more than one blank line between blocks of code.
      %li Make all your methods short and with descriptive names.
      %li Use options/parameter hashes for methods where it makes sense.
      %li Commit in git regularly (after completing each feature is usually good) with informative commit messages.
      %li Keep your controllers and views as simple as possible. Offload complexity to helpers or custom classes.



